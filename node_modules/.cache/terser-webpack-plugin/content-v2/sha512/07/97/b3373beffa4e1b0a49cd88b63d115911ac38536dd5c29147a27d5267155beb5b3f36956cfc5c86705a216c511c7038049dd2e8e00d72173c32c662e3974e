{"map":"{\"version\":3,\"sources\":[\"/Users/luiscartagena/Desktop/Coding/Repositories/MemoryClicks-REACT/src/components/Header/index.js\",\"/Users/luiscartagena/Desktop/Coding/Repositories/MemoryClicks-REACT/src/components/Board/index.js\",\"/Users/luiscartagena/Desktop/Coding/Repositories/MemoryClicks-REACT/src/image.js\",\"/Users/luiscartagena/Desktop/Coding/Repositories/MemoryClicks-REACT/src/App.js\",\"/Users/luiscartagena/Desktop/Coding/Repositories/MemoryClicks-REACT/src/serviceWorker.js\",\"/Users/luiscartagena/Desktop/Coding/Repositories/MemoryClicks-REACT/src/index.js\"],\"names\":[\"Header\",\"props\",\"react_default\",\"a\",\"createElement\",\"Fragment\",\"className\",\"message\",\"score\",\"total\",\"Board\",\"id\",\"images\",\"map\",\"image\",\"style\",\"backgroundColor\",\"color\",\"key\",\"index\",\"onClick\",\"clickHandler\",\"App\",\"state\",\"clicked\",\"handleImageClickById\",\"imageId\",\"_this\",\"slice\",\"findIndex\",\"item\",\"push\",\"setState\",\"sort\",\"Math\",\"random\",\"console\",\"log\",\"components_Header\",\"this\",\"length\",\"components_Board\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"+NAaiBA,IAAAA,EAXjB,SAAgBC,GACZ,OAAOC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACCH,EAAAC,EAAAC,cAAA,SAAA,KACAF,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,SAAf,iBACAJ,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,WAAWL,EAAMM,SAChCL,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,SAAf,SAA8BL,EAAMO,MAApC,OAA+CP,EAAMQ,QAErDP,EAAAC,EAAAC,cAAA,KAAA,QCEGM,IAAAA,EATf,SAAeT,GACX,OAAOC,EAAAC,EAAAC,cAAA,MAAA,CAAKO,GAAG,SACdV,EAAMW,OAAOC,IAAI,SAAAC,GAAK,OACrBZ,EAAAC,EAAAC,cAAA,MAAA,CAAKW,MAAO,CAACC,gBAAiBF,EAAMG,OAAQX,UAAU,QAAQK,GAAI,SAAWG,EAAOI,IAAKJ,EAAMK,MAAOC,QACpG,WAAOnB,EAAMoB,aAAaP,EAAMK,cCJzBP,EAFA,CAAC,CAACK,MAAO,MAAOE,MAAO,GAAI,CAACF,MAAO,OAAQE,MAAO,GAAI,CAACF,MAAO,QAASE,MAAO,ICuE9EG,6MAhEbC,MAAQ,CACNhB,QAAW,0BACXC,MAAS,EAETI,OAAUA,EACVY,QAAW,MASbC,qBAAuB,SAACC,GACtB,IAAIF,EAAUG,EAAKJ,MAAMC,QAAQI,MAAM,IAGc,IAAjDJ,EAAQK,UAAU,SAAAC,GAAI,OAAIJ,IAAYI,KACxCN,EAAQO,KAAKL,GACbC,EAAKK,SAAS,CACZR,QAAWA,EACXhB,MAASmB,EAAKJ,MAAMf,MAAQ,EAC5BD,QAAW,4BAIboB,EAAKK,SAAS,CACZzB,QAAW,uBACXC,MAAS,EACTgB,QAAW,KAIf,IAAIZ,EAASe,EAAKJ,MAAMX,OAAOgB,MAAM,GACrChB,EAAOqB,KAAK,WAAA,OAAMC,KAAKC,SAAW,KAClCR,EAAKK,SAAS,CAACpB,OAAAA,IACfwB,QAAQC,IAAI,sBAAuBX,4EAKnC,OACExB,EAAAC,EAAAC,cAAA,MAAA,CAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACkC,EAAD,CACA/B,QAASgC,KAAKhB,MAAMhB,QACpBC,MAAO+B,KAAKhB,MAAMf,MAClBC,MAAO8B,KAAKhB,MAAMX,OAAO4B,SAEzBtC,EAAAC,EAAAC,cAACqC,EAAD,CACE7B,OAAQ2B,KAAKhB,MAAMX,OACnBS,aAAckB,KAAKd,+BApDXiB,EAAAA,WCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\nfunction Header(props) {\\n    return <>\\n            <header>\\n            <div className=\\\"title\\\">Click-O-Matic</div>\\n            <div className=\\\"message\\\">{props.message}</div>\\n            <div className=\\\"score\\\">Score {props.score} of {props.total}</div>\\n            </header>\\n            <br/>\\n        </>\\n  }\\n  \\n  export default Header;\",\"import React from \\\"react\\\";\\n\\nfunction Board(props) {\\n    return <div id=\\\"board\\\">\\n    {props.images.map(image => (\\n      <div style={{backgroundColor: image.color}} className=\\\"image\\\" id={\\\"image-\\\" + image} key={image.index} onClick={ \\n        () => {props.clickHandler(image.index)}} ></div>\\n    ))}\\n  </div>\\n}\\n\\nexport default Board;\",\"const images = [{color: \\\"red\\\", index: 1}, {color: \\\"blue\\\", index: 2}, {color: \\\"green\\\", index: 3} ];\\n\\nexport default images;\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport Header from \\\"./components/Header/index\\\";\\nimport Board from  \\\"./components/Board/index\\\";\\nimport images from \\\"./image\\\";\\n\\nclass App extends Component {\\n  state = {\\n    \\\"message\\\": \\\"Click an image to start\\\",\\n    \\\"score\\\": 0,\\n    // \\\"images\\\": [1,2,3,4,5,6,7,8,9,10],\\n    \\\"images\\\": images,\\n    \\\"clicked\\\": []\\n  };\\n\\n  // handleImageClick = (event) => {\\n  //   console.log(\\\"CLICKED\\\", event.target);\\n  //   let imageId = event.target.getAttribute(\\\"id\\\");\\n  //   console.log(\\\"Image ID\\\", imageId);\\n  // }\\n\\n  handleImageClickById = (imageId) => {\\n    let clicked = this.state.clicked.slice(0); // new array; copy of \\\"clicked\\\" array from state\\n\\n    // is this imageId in clicked\\n    if (clicked.findIndex(item => imageId === item) === -1){\\n      clicked.push(imageId);\\n      this.setState({\\n        \\\"clicked\\\": clicked,\\n        \\\"score\\\": this.state.score + 1,\\n        \\\"message\\\": \\\"Good guess, keep going\\\"\\n      })\\n    } else {\\n      // you lose, start over\\n      this.setState({\\n        \\\"message\\\": \\\"You Lose, start over\\\",\\n        \\\"score\\\": 0,\\n        \\\"clicked\\\": []\\n      })\\n    }\\n    // rearrange images\\n    let images = this.state.images.slice(0);\\n    images.sort(() => Math.random() - 0.5);\\n    this.setState({images});\\n    console.log(\\\"handling click for \\\", imageId);\\n  }\\n\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <Header \\n        message={this.state.message}\\n        score={this.state.score}\\n        total={this.state.images.length} />\\n\\n        <Board\\n          images={this.state.images}\\n          clickHandler={this.handleImageClickById}\\n        />\\n        {/* <div id=\\\"board\\\">\\n          {this.state.images.map(image => (\\n            <div style={{backgroundColor: image.color}} className=\\\"image\\\" id={\\\"image-\\\" + image} key={image.index} onClick={ \\n              () => {this.handleImageClickById(image.index)}} ></div>\\n          ))}\\n        </div> */}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,a){},16:function(e,t,a){},18:function(e,t,a){\"use strict\";a.r(t);var n=a(0),c=a.n(n),r=a(2),o=a.n(r),s=(a(14),a(3)),i=a(4),l=a(6),m=a(5),d=a(7);a(16);var u=function(e){return c.a.createElement(c.a.Fragment,null,c.a.createElement(\"header\",null,c.a.createElement(\"div\",{className:\"title\"},\"Click-O-Matic\"),c.a.createElement(\"div\",{className:\"message\"},e.message),c.a.createElement(\"div\",{className:\"score\"},\"Score \",e.score,\" of \",e.total)),c.a.createElement(\"br\",null))};var g=function(e){return c.a.createElement(\"div\",{id:\"board\"},e.images.map(function(t){return c.a.createElement(\"div\",{style:{backgroundColor:t.color},className:\"image\",id:\"image-\"+t,key:t.index,onClick:function(){e.clickHandler(t.index)}})}))},h=[{color:\"red\",index:1},{color:\"blue\",index:2},{color:\"green\",index:3}],k=function(e){function t(){var e,a;Object(s.a)(this,t);for(var n=arguments.length,c=new Array(n),r=0;r<n;r++)c[r]=arguments[r];return(a=Object(l.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(c)))).state={message:\"Click an image to start\",score:0,images:h,clicked:[]},a.handleImageClickById=function(e){var t=a.state.clicked.slice(0);-1===t.findIndex(function(t){return e===t})?(t.push(e),a.setState({clicked:t,score:a.state.score+1,message:\"Good guess, keep going\"})):a.setState({message:\"You Lose, start over\",score:0,clicked:[]});var n=a.state.images.slice(0);n.sort(function(){return Math.random()-.5}),a.setState({images:n}),console.log(\"handling click for \",e)},a}return Object(d.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(u,{message:this.state.message,score:this.state.score,total:this.state.images.length}),c.a.createElement(g,{images:this.state.images,clickHandler:this.handleImageClickById}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(c.a.createElement(k,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,a){e.exports=a(18)}},[[8,2,1]]]);","extractedComments":[]}